#!/usr/bin/python

from math import *
import sys

def arg_error():
	ac = len(sys.argv)
	if ac != 2:
		print("%s: Invalid number of argument" % sys.argv[0])
		sys.exit(84)
	c = sys.argv[1]
	if c.isdigit():
		n = float(c)
	else:
		if c == "-h":
			print("USAGE\n\t%s n\n\nDESCRIPTION\n\tn\tconstant defining the integral to be computed" % sys.argv[0])
			sys.exit(0)
		print("%s: Invalid argument" % sys.argv[0])
		sys.exit(84)
	if n < 0:
		print("%s: Invalid argument" % sys.argv[0])
		sys.exit(84)
	return (n)

def f(x, n):
	if x == 0:
		return (1)
	k = 0
	c = float(1)
	while k < n + 1:
		c *= (sin(x / (2 * k + 1))) / (x / (2 * k + 1))
		k += 1
	return (c)

def calc_rect(n):
	x = float(0)
	c = float(0)
	while x < 5000:
		c1 = float(f(x, n))
		c += c1 * 0.5
		x += 0.5
	print("I%d = %.10f" %(n, c))
	d = c - (pi / 2)
	round(d, 10)
	if int(d * 10**10) == 0:
		print("diff = 0.0000000000\n")
	else:
		print("diff = %.10f\n" %(d))
	return (c)

def calc_trap(n):
	x = float(1)
	c = float(0)
	while x < 10000:
		c1 = float(f(x * 0.5, n))
#		c2 = float(f((x + 1) * 0.5, n))
		c += c1
		x += 1
	c = (c * 2 + f(5000, n) + 1) * 0.25
	print("I%d = %.10f" %(n, c))
	d = c - (pi / 2)
	round(d, 10)
	if int(d * 10**10) == 0:
		print("diff = 0.0000000000\n")
	else:
		print("diff = %.10f\n" %(d))
	return (c)

def calc_simp(n):
	x = float(0)
	c = float(0)
	while x < 5000:
		c1 = float(f(x, n))
		c2 = float(f(x + 0.5, n))
		c += (0.5 / 6) * (c1 + c2 + 4 * f((x + x + 0.5) / 2, n))
		x += 0.5
	print("I%d = %.10f" %(n, c))
	d = c - (pi / 2)
	if int(d * 10**10) == 0:
		print("diff = 0.0000000000\n")
	else:
		print("diff = %.10f\n" %(d))
	return (c)

def main():
	n = arg_error()
	print("Rectangles:")
	calc_rect(n)
	print("Trapezoids:")
	calc_trap(n)
	print("Simpson:")
	calc_simp(n)

if __name__ == "__main__":
	main()
